#include "mt7621.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {
	compatible = "zte,e8820s", "mediatek,mt7621-soc";
	model = "ZTE E8820S";

	aliases {
		led-boot = &led_sys;
		led-failsafe = &led_sys;
		led-running = &led_power;
		led-upgrade = &led_power;
		label-mac-device = &ethernet;
	};

	leds {
		compatible = "gpio-leds";

		led_sys: sys {
			label = "e8820s:white:sys";
			gpios = <&gpio 16 GPIO_ACTIVE_LOW>;
		};

		led_power: power {
			label = "e8820s:white:power";
			gpios = <&gpio 3 GPIO_ACTIVE_LOW>;                                       
		};

		wlan2g {
			label = "e8820s:white:wlan2g";
			gpios = <&gpio 14 GPIO_ACTIVE_LOW>;
		};

		wlan5g {
			label = "e8820s:white:wlan5g";
			gpios = <&gpio 12 GPIO_ACTIVE_LOW>;
		};
	};

	keys {
		compatible = "gpio-keys";

		reset {
			label = "reset";
			gpios = <&gpio 18 GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_RESTART>;
		};

		wps {
			label = "wps";
			gpios = <&gpio 8 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_WPS_BUTTON>;
		};

		wifi {
			label = "wifi";
			gpios = <&gpio 10 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_RFKILL>;
		};
	};

&nand {
	status = "okay";

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		partition@0 {
			label = "Bootloader";
			reg = <0x0 0x80000>;
			read-only;
		};

		partition@80000 {
			label = "Config";
			reg = <0x80000 0x40000>;
		};

		partition@c0000 {
			label = "Bdata";
			reg = <0xc0000 0x40000>;
			read-only;
		};

		factory: partition@100000 {
			label = "factory";
			reg = <0x100000 0x40000>;
			read-only;
		};

		partition@140000 {
			label = "crash";
			reg = <0x140000 0x40000>;
		};

		partition@180000 {
			label = "crash_syslog";
			reg = <0x180000 0x40000>;
		};

		partition@1c0000 {
			label = "reserved0";
			reg = <0x1c0000 0x40000>;
			read-only;
		};

		/* uboot expects to find kernels at 0x200000 & 0x600000
		 * referred to as system 1 & system 2 respectively.
		 * a kernel is considered suitable for handing control over
		 * if its linux magic number exists & uImage CRC are correct.
		 * If either of those conditions fail, a matching sys'n'_fail flag
		 * is set in uboot env & a restart performed in the hope that the
		 * alternate kernel is okay.
		 * if neither kernel checksums ok and both are marked failed, system 2
		 * is booted anyway.
		 *
		 * Note uboot's tftp flash install writes the transferred
		 * image to both kernel partitions.
		 */

		/* We keep stock xiaomi firmware (kernel0) here */
		partition@200000 {
			label = "kernel_stock";
			reg = <0x200000 0x400000>;
		};

		partition@600000 {
			label = "kernel";
			reg = <0x600000 0x400000>;
		};

		/* ubi partition is the result of squashing
		 * next consecutive stock partitions:
		 * - rootfs0 (rootfs partition for stock kernel0),
		 * - rootfs1 (rootfs partition for stock failsafe kernel1),
		 * - overlay (used as ubi overlay in stock fw)
		 * resulting 117,5MiB space for packages.
		 */

		partition@a00000 {
			label = "ubi";
			reg = <0xa00000 0x7580000>;
		};
	};
};

&xhci {
	vbus-supply = <&reg_usb_vbus>;
};

&pcie {
	status = "okay";
};

&pcie0 {
	wifi@0,0 {
		compatible = "pci14c3,7603";
		reg = <0x0000 0 0 0 0>;
		mediatek,mtd-eeprom = <&factory 0x0000>;
		ieee80211-freq-limit = <2400000 2500000>;
	};
};

&pcie1 {
	wifi@0,0 {
		compatible = "pci14c3,7662";
		reg = <0x0000 0 0 0 0>;
		mediatek,mtd-eeprom = <&factory 0x8000>;
		ieee80211-freq-limit = <5000000 6000000>;
	};
};

&ethernet {
	compatible = "mediatek,ralink-mt7621-eth";
	mediatek,switch = <&gsw>;
	mtd-mac-address = <&factory 0xe006>;
};

&switch0 {
	/* must delete compatible property */
	/delete-property/ compatible;
	phy-mode = "rgmii";
};

&gsw {
	compatible = "mediatek,ralink-mt7621-gsw";
};

&state_default {
	gpio {
		groups = "jtag", "uart2", "uart3", "wdt";
		function = "gpio";
	};
};
